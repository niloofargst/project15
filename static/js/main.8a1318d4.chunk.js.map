{"version":3,"sources":["components/locationEntry.jsx","components/getLocationWeather.js","components/locationWeather.jsx","components/weatherCard.jsx","components/WeatherApp.jsx","App.jsx","index.jsx"],"names":["useStyles","makeStyles","card","fontSize","LocationEntry","onUpdate","classes","TextField","autoFocus","label","onBlur","ev","target","value","onKeyDown","key","className","location","a","fetch","result","status","json","success","data","error","statusText","message","theme","headerLine","display","alignItems","flex","fontWeight","color","detailLine","justifyContent","description","largeAvatar","width","spacing","height","LoadingIndicator","isLoading","CircularProgress","ErrorMessage","apiError","Typography","variant","WeatherDisplay","weatherData","React","useMemo","weather","temp","main","Math","round","toString","icon","windTransform","wind","deg","windSpeed","speed","Tooltip","title","aria-label","Avatar","alt","src","style","transform","LocationWeather","useState","setWeatherData","setApiError","setIsLoading","useEffect","loadingIndicatorTimeout","setTimeout","getLocationWeather","clearTimeout","getWeather","flagIcon","sys","country","countryCode","root","flexDirection","content","btn","WeatherCard","canDelete","onDelete","Card","CardContent","CardActions","Button","disabled","onClick","flexGrow","overflow","containerGrid","overflowY","padding","addButton","position","margin","right","backgroundColor","bottom","ww","wwp","WeatherApp","storedLocations","localStorage","getItem","JSON","parse","readFromLocalStorage","weatherLocations","setWeatherLocations","updateLocations","locations","setItem","stringify","saveToLocalStorage","removeAtIndex","index","filter","_","locationIndex","updateAtIndex","updatedLocation","map","canAddOrRemove","every","AppBar","Toolbar","Grid","container","xs","sm","md","lg","item","Fab","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a1318d4.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n    card: {\n        fontSize: \"2rem\",\n    },\n\n}));\n\nfunction LocationEntry({ onUpdate }) {\n    const handleBlur = ev => onUpdate(ev.target.value);\n    const classes = useStyles();\n\n    const handleKeyDown = ev => {\n        if (ev.key === \"Enter\") {\n            onUpdate(ev.target.value);\n        }\n    };\n\n    return <TextField autoFocus label=\"Enter location\" onBlur={handleBlur} onKeyDown={handleKeyDown} className={classes.card} />;\n}\n\nLocationEntry.propTypes = {\n    onUpdate: PropTypes.func.isRequired,\n};\n\nexport default LocationEntry;\n","export default async location => {\n    try {\n        const result = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=79facecec184203c56318b2c97086b18&units=metric`,\n        );\n\n        if (result.status === 200) {\n            return { success: true, data: await result.json() };\n        }\n\n        return { success: false, error: result.statusText };\n    } catch (ex) {\n        return { success: false, error: ex.message };\n    }\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport ArrowRightAltIcon from \"@material-ui/icons/ArrowRightAlt\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport getLocationWeather from \"./getLocationWeather\";\n//import \"./style.css\"\n\nconst useStyles = makeStyles(theme => ({\n    headerLine: {\n        display: \"flex\",\n        alignItems: \"center\",\n\n    },\n    location: {\n        flex: 1,\n        fontSize: \"2rem\",\n        fontWeight: \"bold\",\n        color: \"#FFD700\"\n    },\n    detailLine: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        fontSize: \"1rem\"\n\n    },\n    description: {\n        flex: 1,\n        fontSize: \"1rem\"\n\n    },\n    largeAvatar: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n    },\n}));\n\nfunction LoadingIndicator({ isLoading }) {\n    return isLoading ? <CircularProgress /> : null;\n}\n\nfunction ErrorMessage({ apiError }) {\n    if (!apiError) return null;\n\n    return (\n        <>\n            <ErrorIcon color=\"error\" />\n            <Typography color=\"error\" variant=\"h6\">\n                {apiError}\n            </Typography>\n        </>\n    );\n}\n\nfunction WeatherDisplay({ weatherData }) {\n    const classes = useStyles();\n    const { temp, description, icon, windTransform, windSpeed } = React.useMemo(() => {\n        const [weather] = weatherData.weather || [];\n        return {\n            temp: weatherData.main && weatherData.main.temp ? Math.round(weatherData.main.temp).toString() : \"\",\n            description: weather ? weather.description : \"\",\n            icon: weather ? `http://openweathermap.org/img/wn/${weather.icon}@2x.png` : \"\",\n            windTransform: weatherData.wind ? weatherData.wind.deg - 90 : null,\n            windSpeed: weatherData.wind ? Math.round(weatherData.wind.speed) : 0,\n        };\n    }, [weatherData]);\n\n    return (\n        <>\n            {temp && <Typography variant=\"h6\">{temp}&deg;C</Typography>}\n            {icon && (\n                <Tooltip title={description} aria-label={description}>\n                    <Avatar className={classes.largeAvatar} alt={description} src={icon} />\n                </Tooltip>\n            )}\n            {windSpeed > 0 && (\n                <>\n                    <Typography variant=\"h6\">{`${windSpeed} km/h`}</Typography>\n                    {windTransform !== null && (\n                        <ArrowRightAltIcon style={{ transform: `rotateZ(${windTransform}deg)` }} />\n                    )}\n                </>\n            )}\n        </>\n    );\n}\n\nfunction LocationWeather({ location }) {\n    const classes = useStyles();\n\n    const [weatherData, setWeatherData] = React.useState({});\n    const [apiError, setApiError] = React.useState(\"\");\n    const [isLoading, setIsLoading] = React.useState(false);\n\n    React.useEffect(() => {\n        const loadingIndicatorTimeout = setTimeout(() => setIsLoading(true), 500);\n        const getWeather = async () => {\n            const result = await getLocationWeather(location);\n            clearTimeout(loadingIndicatorTimeout);\n            setIsLoading(false);\n            setWeatherData(result.success ? result.data : {});\n            setApiError(result.success ? \"\" : result.error);\n        };\n\n        getWeather();\n        return () => clearTimeout(loadingIndicatorTimeout);\n    }, [location]);\n\n    const { flagIcon, countryCode } = React.useMemo(() => {\n        return {\n\n            flagIcon: weatherData.sys ? `http://www.geognos.com/api/en/countries/flag/${weatherData.sys.country}.png` : \"\",\n            countryCode: weatherData.sys ? weatherData.sys.country : \"\",\n        };\n    }, [weatherData]);\n\n    return (\n        <>\n            <div className={classes.headerLine}>\n                <Typography className={classes.location} variant=\"h5\">\n                    {location}\n                </Typography>\n                {flagIcon && <img alt={countryCode} src={flagIcon} width=\"26\" height=\"22\" />}\n            </div>\n            <div className={classes.detailLine}>\n                <LoadingIndicator isLoading={isLoading} />\n                <ErrorMessage apiError={apiError} />\n                <WeatherDisplay weatherData={weatherData} />\n            </div>\n        </>\n    );\n}\n\nLocationWeather.propTypes = {\n    location: PropTypes.string.isRequired,\n};\n\nexport default LocationWeather;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport LocationEntry from \"./locationEntry\";\nimport LocationWeather from \"./locationWeather\";\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        fontSize: \"1rem\"\n    },\n    content: {\n        flex: 1,\n        fontSize: \"1rem\"\n    },\n    btn: {\n        fontSize: \"1.5rem\",\n        color: \"red\"\n    }\n}));\n\nfunction WeatherCard({ location, canDelete, onDelete, onUpdate }) {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n            <CardContent className={classes.content}>\n                {!location && <LocationEntry onUpdate={onUpdate} />}\n                {location && <LocationWeather location={location} />}\n            </CardContent>\n            <CardActions>\n                <Button className={classes.btn} disabled={!canDelete} onClick={onDelete} fontSize=\"medium\" color=\"#FFD700\">\n                    Remove\n                </Button>\n            </CardActions>\n        </Card>\n    );\n}\n\nWeatherCard.propTypes = {\n    location: PropTypes.string.isRequired,\n    canDelete: PropTypes.bool.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onUpdate: PropTypes.func.isRequired,\n};\n\nexport default WeatherCard;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport WeatherCard from \"./weatherCard\";\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        flexGrow: 1,\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100vh\",\n\n        overflow: \"hidden\",\n    },\n    containerGrid: {\n        flex: 1,\n        overflowY: \"auto\",\n        padding: \"2em\",\n\n    },\n    addButton: {\n        position: \"absolute\",\n        margin: \"1em\",\n        right: 0,\n        backgroundColor: \"#FFD700\",\n        bottom: 0,\n    },\n    ww: {\n        backgroundColor: \"#FFD700\",\n    },\n    wwp: {\n        color: \"white\",\n        fontSize: \"3rem\",\n        fontWeight: \"bold\"\n    }\n}));\n\nconst LOCAL_STORAGE_KEY = \"locations\";\nfunction saveToLocalStorage(locations) {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(locations));\n}\n\nfunction readFromLocalStorage() {\n    const storedLocations = localStorage.getItem(LOCAL_STORAGE_KEY);\n    return storedLocations ? JSON.parse(storedLocations) : [];\n}\n\nfunction WeatherApp() {\n    const classes = useStyles();\n    const [weatherLocations, setWeatherLocations] = React.useState(readFromLocalStorage());\n\n    const handleAddClick = () => setWeatherLocations([...weatherLocations, \"\"]);\n\n    const updateLocations = locations => {\n        setWeatherLocations(locations);\n        saveToLocalStorage(locations);\n    };\n\n    const removeAtIndex = index => () =>\n        updateLocations(weatherLocations.filter((_, locationIndex) => locationIndex !== index));\n\n    const updateAtIndex = index => updatedLocation =>\n        updateLocations(\n            weatherLocations.map((location, locationIndex) => (locationIndex === index ? updatedLocation : location)),\n        );\n\n    const canAddOrRemove = React.useMemo(() => weatherLocations.every(location => location !== \"\"), [weatherLocations]);\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar className={classes.ww}>\n                    <Typography variant=\"h6\" className={classes.wwp}  >\n                        Weather App ⛅️\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Grid container spacing={3} className={classes.containerGrid}>\n                {weatherLocations.map((location, index) => (\n                    <Grid key={index} xs={12} sm={6} md={4} lg={3} item>\n                        <WeatherCard\n                            location={location}\n                            canDelete={!location || canAddOrRemove}\n                            onDelete={removeAtIndex(index)}\n                            onUpdate={updateAtIndex(index)}\n                        />\n                    </Grid>\n                ))}\n            </Grid>\n            <Fab\n                onClick={handleAddClick}\n                aria-label=\"add weather location\"\n                className={classes.addButton}\n                color=\"secondary\"\n                disabled={!canAddOrRemove}\n            >\n                <AddIcon />\n            </Fab>\n        </div>\n    );\n}\n\nexport default WeatherApp;\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport WeatherApp from \"./components/WeatherApp\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n            <WeatherApp />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}